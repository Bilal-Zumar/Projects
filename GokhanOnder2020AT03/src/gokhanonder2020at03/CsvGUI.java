/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gokhanonder2020at03;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author gokhan
 */
public class CsvGUI extends javax.swing.JFrame {
    
    
    DateFormat dateFormat = new SimpleDateFormat("MM/dd/YY");
    Date date = new Date();
    String [][]ac=null;
    ArrayList<Player> playerList=new ArrayList<Player>();
    String [][]all_enclosed=null;
    
    
    public CsvGUI() {
        initComponents();
        txtfDate.setText(" " + dateFormat.format(date));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        txtfTableName = new javax.swing.JTextField();
        btnOpen = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtfDate = new javax.swing.JTextField();
        btnExit = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtfTableName1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtfTableName2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtfTableName3 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(table);

        txtfTableName.setText("Status.csv");
        txtfTableName.setName("f_name"); // NOI18N
        txtfTableName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfTableNameActionPerformed(evt);
            }
        });

        btnOpen.setText("Open");
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        jLabel1.setText("File Name:");

        jLabel7.setText("Date:");

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Enter Tag Name of Player");

        txtfTableName1.setName("f_name"); // NOI18N
        txtfTableName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfTableName1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Search by Player Name");

        jLabel4.setText("Search by Player Name and Achievement");

        jLabel5.setText("Enter Tag Name of Player");

        txtfTableName2.setName("f_name"); // NOI18N
        txtfTableName2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfTableName2ActionPerformed(evt);
            }
        });

        jLabel6.setText("Enter Description of Achievement");

        txtfTableName3.setName("f_name"); // NOI18N
        txtfTableName3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfTableName3ActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jTable1);

        jLabel8.setText("Achievements of a Player");

        jButton4.setText("Order by Description");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Order by Level");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel9.setText("Players and Achievements");

        jButton3.setText("Refresh");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton6.setText("Convert to PDF");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel2)
                                        .addGap(32, 32, 32)
                                        .addComponent(txtfTableName1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(111, 111, 111)
                                        .addComponent(jLabel3)
                                        .addGap(194, 194, 194)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel5)
                                                    .addComponent(jLabel6))
                                                .addGap(30, 30, 30)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtfTableName2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtfTableName3, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnExit)
                                    .addComponent(jLabel1))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addComponent(txtfTableName, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(179, 179, 179)
                                        .addComponent(jButton3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(129, 129, 129)
                                        .addComponent(jButton1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(104, 104, 104)
                                        .addComponent(jButton6)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jButton2)
                                        .addGap(67, 67, 67)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(49, 49, 49))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(336, 336, 336)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtfDate, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jLabel8))))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(btnExit)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtfTableName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtfTableName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtfTableName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtfTableName3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(147, 147, 147)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton2)
                                    .addComponent(jButton1)
                                    .addComponent(jButton4))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton5)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnOpen)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void showAllPlayersWithAchievements(String filelocation){
          String line = "";
          String csvSplitBy = ",";
          System.out.println(filelocation);
          Vector data=new Vector();
          Vector data_enclosed=new Vector();
          playerList=new ArrayList<Player>();
          String ongoing_player_email="";
          String ongoing_player_tagname="";
          
//          ArrayList<String[6]> data=new ArrayList<String[6]>();
             try ( BufferedReader  br = new BufferedReader(new FileReader(filelocation))){
                 Player ply=null;
                 while((line = br.readLine())!=null){
                     String[] token = line.split(csvSplitBy);
                  
                     String[] enclosed_single_row=new String[5];
                     if (token[0].toLowerCase().compareTo("achievement")==0){
                         Achievement ach1=new Achievement(token[1],Integer.parseInt(token[2]),Integer.parseInt(token[3]));
                         ply.add_achievement(ach1);
                         enclosed_single_row[0]=ongoing_player_email;
                         enclosed_single_row[1]=ongoing_player_tagname;
                         enclosed_single_row[2]=token[1];
                         enclosed_single_row[3]=token[2];
                         enclosed_single_row[4]=token[3];
                         data_enclosed.add(enclosed_single_row);
                     }
                     else if (token[0].toLowerCase().compareTo("player")==0){
                         if(ply!=null){
                             playerList.add(ply);
                         }
                         ply=new Player(token[1],token[2],null);
                         ongoing_player_email=token[1];
                         ongoing_player_tagname=token[2];
                     }
                     else{
                         continue;
                     }
                 }
                 if(ply!=null){
                     playerList.add(ply);
                 }
                 all_enclosed=new String[data_enclosed.size()][5];
                 for (int i=0;i<data_enclosed.size();i++){
                     for(int j=0;j<5;j++){
                         String []newl=(String[]) data_enclosed.get(i);
                         all_enclosed[i][j]=newl[j];
                     }
                 }
                 DateFormat df = new SimpleDateFormat("dd/MM/yy HH:mm:ss");
                 Date dateobj = new Date();
                 jLabel9.setText("Players and Achievements at "+ df.format(dateobj));
                 table.setModel(new javax.swing.table.DefaultTableModel(
                    all_enclosed,
                    new String[] {
                        "User Name","Tag Name","Description","Level","Maximum"
                    }
                ) {
                    boolean [] canEdit = new boolean [] {
                        false
                    };

                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit [columnIndex];
                    }
                });
//                for (int i=0;i<playerList.size();i++){
//                    System.out.println(playerList.get(i).getUserName());
//                    System.out.println(playerList.get(i).getTagName());
//                    for(int j=0;j<playerList.get(i).getAchievementList().size();j++){
//                        System.out.println(playerList.get(i).getAchievementList().get(j).getDescription());
//                        System.out.println(playerList.get(i).getAchievementList().get(j).getLevel());
//                        System.out.println(playerList.get(i).getAchievementList().get(j).getMaximum());
//                    }
//                }
             }
               
            catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "No file with this name exists","Error",JOptionPane.ERROR_MESSAGE );
        }
    }
    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
          String filelocation = System.getProperty("user.dir")+"\\src\\gokhanonder2020at03\\"+txtfTableName.getText();
          showAllPlayersWithAchievements(filelocation);
    }//GEN-LAST:event_btnOpenActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        //this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(all_enclosed==null){
            JOptionPane.showMessageDialog(this, "Please open the file before furhter processing","Error",JOptionPane.ERROR_MESSAGE );
            return;
        }
        boolean player_exists=false;
        int i;
        Vector data=new Vector();
        if("".equals(txtfTableName1.getText())){
            ac=null;
            JOptionPane.showMessageDialog(this, "Tag Name cannot be empty","Error",JOptionPane.ERROR_MESSAGE );
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                null,
                new String[] {
                    "Description","Level","Out of Possible"
                }
             ) {
                boolean [] canEdit = new boolean [] {
                    false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            return;
        }
        for(i=0;i<all_enclosed.length;i++){
            
            if(txtfTableName1.getText().toLowerCase().compareTo(all_enclosed[i][1].toLowerCase())==0){
                player_exists=true;
                String [] achieve=new String[3];
                achieve[0]=all_enclosed[i][2];
                achieve[1]=all_enclosed[i][3];
                achieve[2]=all_enclosed[i][4];
                data.add(achieve);
               
               
               
            }
        }
        if(!player_exists){
            ac=null;
            JOptionPane.showMessageDialog(this, "No user with this Tag Name exists","Error",JOptionPane.ERROR_MESSAGE );
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                null,
                new String[] {
                    "Description","Level","Out of Possible"
                }
             ) {
                boolean [] canEdit = new boolean [] {
                    false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
        }
        else{
            //Call the display function
            ac=new String[data.size()][3];
            for (int k=0;k<data.size();k++){
                     for(int j=0;j<3;j++){
                         String []newl=(String[]) data.get(k);
                         ac[k][j]=newl[j];
                     }
            }
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                ac,
                new String[] {
                    "Description","Level","Out of Possible"
                }
             ) {
                boolean [] canEdit = new boolean [] {
                    false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            DateFormat df = new SimpleDateFormat("dd/MM/yy HH:mm:ss");
            Date dateobj = new Date();
            jLabel8.setText("Achievements of "+txtfTableName1.getText()+" at "+df.format(dateobj));
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(all_enclosed==null){
            JOptionPane.showMessageDialog(this, "Please open the file before furhter processing","Error",JOptionPane.ERROR_MESSAGE );
            return;
        }
        boolean player_exists=false;
        boolean ach_exists=false;
        int i;
        Vector data=new Vector();
        if("".equals(txtfTableName3.getText()) || "".equals(txtfTableName2.getText())){
            ac=null;
            JOptionPane.showMessageDialog(this, "Tag Name or achievement cannot be empty","Error",JOptionPane.ERROR_MESSAGE );
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                null,
                new String[] {
                    "Description","Level","Out of Possible"
                }
             ) {
                boolean [] canEdit = new boolean [] {
                    false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            return;
        }

        for(i=0;i<all_enclosed.length;i++){
            if(txtfTableName3.getText().toLowerCase().compareTo(all_enclosed[i][1].toLowerCase())==0){
                player_exists=true;
               
                if(all_enclosed[i][2].toLowerCase().compareTo(txtfTableName2.getText().toLowerCase())==0){
                    ach_exists=true;
                    String [] achieve=new String[3];
                    achieve[0]=all_enclosed[i][2];
                    achieve[1]=all_enclosed[i][3];
                    achieve[2]=all_enclosed[i][4];
                    data.add(achieve);
                }                    
            }
        }
        if(!player_exists || !ach_exists){
            ac=null;
            JOptionPane.showMessageDialog(this, "No user with this Tag Name and achievement exists","Error",JOptionPane.ERROR_MESSAGE );
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                null,
                new String[] {
                    "Description","Level","Out of Possible"
                }
             ) {
                boolean [] canEdit = new boolean [] {
                    false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
        }
        else{
            //Call the display function
            ac=new String[data.size()][3];
            for (int k=0;k<data.size();k++){
                     for(int j=0;j<3;j++){
                         String []newl=(String[]) data.get(k);
                         ac[k][j]=newl[j];
                     }
            }
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                ac,
                new String[] {
                    "Description","Level","Out of Possible"
                }
             ) {
                boolean [] canEdit = new boolean [] {
                    false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            DateFormat df = new SimpleDateFormat("dd/MM/yy HH:mm:ss");
            Date dateobj = new Date();
            jLabel8.setText("Achievement of "+txtfTableName1.getText()+" at "+df.format(dateobj));
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtfTableName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfTableName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfTableName1ActionPerformed

    private void txtfTableName2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfTableName2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfTableName2ActionPerformed

    private void txtfTableName3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfTableName3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfTableName3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(all_enclosed==null){
            JOptionPane.showMessageDialog(this, "The achievements Table is empty","Error",JOptionPane.ERROR_MESSAGE );
            return;
        }
        int n = all_enclosed.length;
        for (int i = 0; i < n-1; i++)
            for (int j = 0; j < n-i-1; j++)
                if (all_enclosed[j][2].compareTo(all_enclosed[j+1][2])>0)
                {
                    // swap temp and arr[i]
                    String[] temp=all_enclosed[j];
                    all_enclosed[j]=all_enclosed[j+1];
                    all_enclosed[j+1]=temp;
                }
        table.setModel(new javax.swing.table.DefaultTableModel(
                all_enclosed,
                new String[] {
                    "User Name","Tag Name","Description","Level","Maximum"
                }
             ) {
                boolean [] canEdit = new boolean [] {
                    false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if(all_enclosed==null){
            JOptionPane.showMessageDialog(this, "The achievements Table is empty","Error",JOptionPane.ERROR_MESSAGE );
            return;
        }
        int n = all_enclosed.length;
        for (int i = 0; i < n-1; i++)
            for (int j = 0; j < n-i-1; j++)
                if (Integer.parseInt(all_enclosed[j][3])>Integer.parseInt(all_enclosed[j+1][3]))
                {
                    // swap temp and arr[i]
                    String[] temp=all_enclosed[j];
                    all_enclosed[j]=all_enclosed[j+1];
                    all_enclosed[j+1]=temp;
                }
        table.setModel(new javax.swing.table.DefaultTableModel(
                all_enclosed,
                new String[] {
                    "User Name","Tag Name","Description","Level","Maximum"
                }
             ) {
                boolean [] canEdit = new boolean [] {
                    false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
    }//GEN-LAST:event_jButton5ActionPerformed

    private void txtfTableNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfTableNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfTableNameActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String filelocation = System.getProperty("user.dir")+"\\src\\gokhanonder2020at03\\Status.csv";
        showAllPlayersWithAchievements(filelocation);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            // TODO add your handling code here:
            if(all_enclosed==null){
                JOptionPane.showMessageDialog(this, "The achievements Table is empty. Cannot convert to PDF right now","Error",JOptionPane.ERROR_MESSAGE );
                return;
            }
            PDFGenerator pdfgen = new PDFGenerator();
            pdfgen.execute(playerList);
        } catch (IOException ex) {
            Logger.getLogger(CsvGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
    
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CsvGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CsvGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CsvGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CsvGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CsvGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtfDate;
    private javax.swing.JTextField txtfTableName;
    private javax.swing.JTextField txtfTableName1;
    private javax.swing.JTextField txtfTableName2;
    private javax.swing.JTextField txtfTableName3;
    // End of variables declaration//GEN-END:variables

}